{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\AWScourse\\\\Twitter\\\\front-end\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { Card, Form, Button, Col, Row, Container } from \"react-bootstrap\";\nimport { AuthContext } from \"../App\";\nexport const Login = () => {\n  const {\n    dispatch\n  } = React.useContext(AuthContext);\n  const initialState = {\n    users: [],\n    username: \"\",\n    password: \"\",\n    isSubmiting: false,\n    errorMsg: null\n  };\n  const [data, setData] = React.useState(initialState);\n\n  const handleInputChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    setData({ ...data,\n      isSubmitting: true,\n      errorMsg: null\n    });\n    fetch(\"http://localhost:8080/users/all\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: data.username,\n        password: data.password\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw res;\n    }).then(resJson => {\n      dispatch({\n        type: \"LOGIN\",\n        payload: resJson\n      });\n      console.log(data.username);\n    }).catch(error => {\n      setData({ ...data,\n        isSubmitting: false,\n        errorMsg: error.message || error.statusText\n      });\n    });\n  };\n  /* constructor(props) {\r\n      super(props)\r\n      this.handleSuccessfulAuth = this.handleSuccessfulAuth.bind(this)\r\n      this.state = {\r\n          users: [],\r\n          username: \"\",\r\n          password: \"\",\r\n          id: \"\",\r\n      }\r\n  } */\n\n  /*     componentDidMount = () => {\r\n          fetch(\"http://localhost:8080/users/all\")\r\n          .then(res => res.json())\r\n          .then((res) => {\r\n              this.setState ({ users: res })\r\n          })\r\n      } */\n\n  /*   handleSuccessfulAuth(data) {\r\n        //TODO update parent component app.js\r\n        this.props.history.push(\"/tweets\") //after login success\r\n    } */\n  // function(s) that serarches users for correct and matches password\n\n  /* handleLogin = (e) => {\r\n        console.log(this.state.users)\r\n      e.preventDefault()\r\n      var users = this.state.users\r\n      var username = this.state.username\r\n      var passwordInput = this.state.password\r\n        var user = users.find(el => el.username === username && el.password === passwordInput)\r\n      if (user === undefined) {\r\n          console.log(\"error\")\r\n      }\r\n      else {\r\n          console.log(user)\r\n          this.props.handleSuccessfulAuth(user.data)\r\n      }\r\n      \r\n  } */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"border border-dark bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 34\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    value: data.username,\n    onChange: handleInputChange,\n    className: \"bg-dark text-white\",\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    id: \"password\",\n    name: \"password\",\n    value: data.password,\n    onChange: handleInputChange,\n    className: \"bg-dark text-white\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }))), data.errorMessage && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, data.errorMessage), /*#__PURE__*/React.createElement(Button, {\n    disabled: data.isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, data.isSubmitting ? \"Loading...\" : \"Login\"))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Login;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/AWScourse/Twitter/front-end/src/components/Login.js"],"names":["React","Card","Form","Button","Col","Row","Container","AuthContext","Login","dispatch","useContext","initialState","users","username","password","isSubmiting","errorMsg","data","setData","useState","handleInputChange","e","target","name","value","handleLogin","preventDefault","isSubmitting","fetch","method","headers","body","JSON","stringify","then","res","ok","json","resJson","type","payload","console","log","catch","error","message","statusText","errorMessage"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Card,Form,Button,Col, Row, Container} from \"react-bootstrap\"\r\nimport { AuthContext } from \"../App\"\r\n\r\nexport const Login = () => {\r\n\r\n    const {dispatch} = React.useContext(AuthContext)\r\n\r\n    const initialState = {\r\n        users: [],\r\n        username: \"\",\r\n        password: \"\",\r\n        isSubmiting: false,\r\n        errorMsg: null\r\n    }\r\n\r\n    const [data, setData] = React.useState(initialState)\r\n\r\n    const handleInputChange = e => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault()\r\n        setData({\r\n            ...data,\r\n            isSubmitting: true,\r\n            errorMsg: null\r\n        })\r\n        fetch(\"http://localhost:8080/users/all\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                username: data.username,\r\n                password: data.password\r\n            })\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }throw res\r\n        }).then(resJson => {\r\n            dispatch({\r\n                type: \"LOGIN\",\r\n                payload: resJson\r\n            })\r\n            console.log(data.username)\r\n        }).catch(error => {\r\n            setData({\r\n                ...data,\r\n                isSubmitting: false,\r\n                errorMsg: error.message || error.statusText\r\n            })\r\n        })\r\n    }\r\n    /* constructor(props) {\r\n        super(props)\r\n        this.handleSuccessfulAuth = this.handleSuccessfulAuth.bind(this)\r\n        this.state = {\r\n            users: [],\r\n            username: \"\",\r\n            password: \"\",\r\n            id: \"\",\r\n        }\r\n    } */\r\n\r\n/*     componentDidMount = () => {\r\n        fetch(\"http://localhost:8080/users/all\")\r\n        .then(res => res.json())\r\n        .then((res) => {\r\n            this.setState ({ users: res })\r\n        })\r\n    } */\r\n\r\n  /*   handleSuccessfulAuth(data) {\r\n        //TODO update parent component app.js\r\n        this.props.history.push(\"/tweets\") //after login success\r\n    } */\r\n\r\n\r\n\r\n    // function(s) that serarches users for correct and matches password\r\n    /* handleLogin = (e) => {\r\n\r\n        console.log(this.state.users)\r\n        e.preventDefault()\r\n        var users = this.state.users\r\n        var username = this.state.username\r\n        var passwordInput = this.state.password\r\n\r\n        var user = users.find(el => el.username === username && el.password === passwordInput)\r\n        if (user === undefined) {\r\n            console.log(\"error\")\r\n        }\r\n        else {\r\n            console.log(user)\r\n            this.props.handleSuccessfulAuth(user.data)\r\n        }\r\n        \r\n    } */\r\n\r\n        return(\r\n            <div>\r\n        <Container>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col>\r\n            <br/>\r\n            <br/>\r\n            <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header><h3>Login</h3></Card.Header>\r\n                    <Card.Body>\r\n                        <Form onSubmit={handleLogin}>\r\n                            <Form.Row>\r\n                                <Form.Group as= {Col}>\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\"\r\n                                    type=\"text\"\r\n                                    id = \"username\"\r\n                                    name = \"username\"\r\n                                    value={data.username}\r\n                                    onChange= {handleInputChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder= \"Username\" />\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\"\r\n                                    type=\"text\"\r\n                                    id = \"password\"\r\n                                    name = \"password\"\r\n                                    value={data.password}\r\n                                    onChange= {handleInputChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder= \"Password\" />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            {data.errorMessage && (\r\n                                <span className=\"form-error\">{data.errorMessage}</span>)}\r\n                                <Button disabled={data.isSubmitting}>\r\n                                    {data.isSubmitting ? (\r\n                                        \"Loading...\"\r\n                                    ) : (\r\n                                        \"Login\"\r\n                                    )}\r\n                                </Button>\r\n                            </Form>\r\n                            {/* <Card.Footer style={{\"textAlign\":\"right\"}}>\r\n                                <Button size=\"sm\" variant=\"primary\" onClick={this.handleLogin}>Login</Button>\r\n                            </Card.Footer> */}\r\n                        </Card.Body>\r\n                    \r\n                </Card>\r\n            \r\n            </Col>\r\n            <Col></Col>\r\n          </Row>\r\n          </Container>\r\n            \r\n            </div>\r\n    \r\n        )\r\n}\r\nexport default Login"]},"metadata":{},"sourceType":"module"}