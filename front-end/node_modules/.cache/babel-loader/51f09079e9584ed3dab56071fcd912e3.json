{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Admin\\\\OneDrive\\\\AWScourse\\\\Twitter\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{Card,Form,Button,Col,Container,Row}from\"react-bootstrap\";import{authContext}from'../context/AuthContext';import{useHistory}from'react-router-dom';var Signup=function Signup(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useContext=useContext(authContext),setAuthData=_useContext.setAuthData;var history=useHistory();var handleSend=function handleSend(){fetch(\"https://1lfzbgijz6.execute-api.eu-north-1.amazonaws.com/dev/users/\",{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({username:username,email:email,password:password})}).then(function(response){return response.json();}).then(function(res){setAuthData();history.replace(\"/\");alert(\"you are now able to login\");}).catch(function(error){console.log(error);});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{className:\"border border-dark bg-dark text-white\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Register\")),/*#__PURE__*/React.createElement(Form,{onSubmit:handleSend},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col},/*#__PURE__*/React.createElement(Form.Label,null,\"Username\"),/*#__PURE__*/React.createElement(Form.Control,{required:true,autoComplete:\"off\",type:\"text\",onChange:function onChange(e){return setUsername(e.target.value);},className:\"bg-dark text-white\",placeholder:\"Username\"}),/*#__PURE__*/React.createElement(Form.Label,null,\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{required:true,autoComplete:\"off\",type:\"text\",onChange:function onChange(e){return setEmail(e.target.value);},className:\"bg-dark text-white\",placeholder:\"email@email.com\"}),/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{required:true,autoComplete:\"off\",type:\"text\",onChange:function onChange(e){return setPassword(e.target.value);},className:\"bg-dark text-white\",placeholder:\"Password\"}))),/*#__PURE__*/React.createElement(Card.Footer,{style:{\"textAlign\":\"right\"}},/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"primary\",onClick:handleSend},\"Submit\")))))))));};export default Signup;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/AWScourse/Twitter/front-end/src/components/Signup.js"],"names":["React","useState","useContext","Card","Form","Button","Col","Container","Row","authContext","useHistory","Signup","username","setUsername","password","setPassword","email","setEmail","setAuthData","history","handleSend","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","replace","alert","catch","error","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport {Card,Form,Button,Col, Container, Row} from \"react-bootstrap\"\r\nimport {authContext} from '../context/AuthContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Signup = () => {\r\n\r\n    const [username, setUsername] = useState()\r\n    const [password, setPassword] = useState()\r\n    const [email, setEmail] = useState()\r\n    const {setAuthData} = useContext(authContext)\r\n    const history = useHistory()\r\n\r\n    \r\n    const handleSend = () => {\r\n        fetch(\"https://1lfzbgijz6.execute-api.eu-north-1.amazonaws.com/dev/users/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\", \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                email: email,\r\n                password: password\r\n            })   \r\n        })\r\n        .then((response) => response.json())\r\n        .then(res => {\r\n            setAuthData()\r\n            history.replace(\"/\")\r\n            alert(\"you are now able to login\")\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                <Col>\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header><h3>Register</h3></Card.Header>\r\n                    <Form onSubmit={handleSend}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as= {Col}>\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\"\r\n                                    type=\"text\"\r\n                                    onChange= {e => setUsername(e.target.value)}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder= \"Username\" />\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\"\r\n                                    type=\"text\"\r\n                                    onChange= {e => setEmail(e.target.value)}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder= \"email@email.com\" />\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\"\r\n                                    type=\"text\"\r\n                                    onChange= {e => setPassword(e.target.value)}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder= \"Password\" />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Card.Footer style={{\"textAlign\":\"right\"}}>\r\n                                <Button size=\"sm\" variant=\"primary\" onClick={handleSend}>Submit</Button>\r\n                            </Card.Footer>\r\n                        </Card.Body>\r\n                    </Form>\r\n                </Card></Col>\r\n                </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}