{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\AWScourse\\\\Twitter\\\\front-end\\\\src\\\\components\\\\Profile.js\";\nimport React from 'react';\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdate = () => {\n      fetch(\"http://localhost:8080/users/all/\" + this.state.id, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          bio: this.state.bio,\n          username: this.state.user.username,\n          password: this.state.user.password\n        })\n      });\n      console.log(\"Updated: \" + this.state.bio);\n    };\n\n    this.state = {\n      id: \"\",\n      user: [],\n      username: \"\",\n      bio: \"\"\n    };\n  } // user id as props from login\n  // hämta user info och möjliggör edit\n\n  /*     componentDidMount(props){\r\n          // id från login\r\n          console.log(\"id: \",this.props.location.state.id)\r\n          this.setState ({id: this.props.location.state.id})\r\n          fetch(\"http://localhost:8080/users/all\")\r\n          .then(res => res.json())\r\n          .then((result) => {\r\n              for(var i = 0; i < result.length; i++) {\r\n                  if(result[i].id === this.state.id) {\r\n                      this.setState ({user: result[i]})\r\n                  }\r\n              }\r\n              console.log(this.state.user)\r\n          })\r\n      } */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"hej \", this.state.user.username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Change bio:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"(max 255 characters)\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      as: \"textarea\",\n      rows: \"10\",\n      id: \"bio\",\n      name: \"bio\",\n      value: this.state.bio,\n      onChange: e => this.setState({\n        bio: e.target.value\n      }),\n      className: \"bg-dark text-white\",\n      maxLength: 255,\n      placeholder: this.state.user.bio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"Update\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/AWScourse/Twitter/front-end/src/components/Profile.js"],"names":["React","Form","Button","Col","Row","Container","Profile","Component","constructor","props","handleUpdate","fetch","state","id","method","headers","Accept","body","JSON","stringify","bio","username","user","password","console","log","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Form, Button, Col, Row, Container} from \"react-bootstrap\"\r\n\r\nexport default class Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: \"\",\r\n            user: [],\r\n            username: \"\",\r\n            bio: \"\"\r\n        }\r\n    }\r\n    // user id as props from login\r\n    // hämta user info och möjliggör edit\r\n/*     componentDidMount(props){\r\n        // id från login\r\n        console.log(\"id: \",this.props.location.state.id)\r\n        this.setState ({id: this.props.location.state.id})\r\n        fetch(\"http://localhost:8080/users/all\")\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            for(var i = 0; i < result.length; i++) {\r\n                if(result[i].id === this.state.id) {\r\n                    this.setState ({user: result[i]})\r\n                }\r\n            }\r\n            console.log(this.state.user)\r\n        })\r\n    } */\r\n\r\n    handleUpdate = () => {\r\n        fetch(\"http://localhost:8080/users/all/\" + this.state.id, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                Accept: \"application/json\", \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                bio: this.state.bio,\r\n                username: this.state.user.username,\r\n                password: this.state.user.password\r\n            })\r\n        })\r\n        console.log(\"Updated: \" + this.state.bio)\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <h2>hej {this.state.user.username}</h2>\r\n                        <p>Change bio:</p>\r\n                        <p>(max 255 characters)</p>\r\n                        <Form>\r\n                            <Form.Group as= {Col}>\r\n                                <Form.Control required autoComplete=\"off\"\r\n                                    as=\"textarea\"\r\n                                    rows=\"10\"\r\n                                    id = \"bio\"\r\n                                    name = \"bio\"\r\n                                    value={this.state.bio}\r\n                                    onChange= {e => this.setState({bio: e.target.value})}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    maxLength={255}\r\n                                    placeholder= {this.state.user.bio} />\r\n                                    \r\n                            </Form.Group>\r\n                            <Button onClick={this.handleUpdate}>Update</Button>\r\n                        </Form>\r\n                      </Col>\r\n                      <Col></Col>  \r\n                    </Row>\r\n                </Container>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}