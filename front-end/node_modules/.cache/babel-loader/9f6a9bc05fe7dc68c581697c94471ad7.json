{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\AWScourse\\\\Twitter\\\\front-end\\\\src\\\\components\\\\HomePage.js\";\nimport React from 'react';\nimport Tweets from './Tweets';\nimport { AuthContext } from '../App';\nconst initialState = {\n  tweets: [],\n  isFetching: false,\n  hasError: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_TWEETS_REQUEST\":\n      return { ...state,\n        isFetching: true,\n        hasError: false\n      };\n\n    case \"FETCH_TWEETS_SUCCESS\":\n      return { ...state,\n        isFetching: false,\n        tweets: action.payload\n      };\n\n    case \"FETCH_TWEETS_FAILURE\":\n      return { ...state,\n        isFetching: false,\n        hasError: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const HomePage = () => {\n  const {\n    state: authState\n  } = React.useContext(AuthContext);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  React.useEffect(() => {\n    dispatch({\n      type: \"FETCH_TWEETS_REQUEST\"\n    });\n    fetch(\"hhtp://localhost:8080/users/all\", {\n      //TODO!\n      headers: {\n        Authorization: `Bearer ${authState.token}`\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw res;\n      }\n    });\n  }).then(resJson => {\n    console.log(resJson);\n    dispatch({\n      type: \"FETCH_TWEETS_SUCCESS\",\n      payload: resJson\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: \"FETCH_TWEETS_FAILURE\"\n    });\n  }, [authState.token]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, state.isFetching ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Loading...\") : state.hasError ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"AN ERROR HAS ACCURED\") : /*#__PURE__*/React.createElement(React.Fragment, null, state.tweets.length > 0 && state.tweets.map(tweet => /*#__PURE__*/React.createElement(Tweets, {\n    key: tweet.id.toString(),\n    tweet: tweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })))));\n};\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/AWScourse/Twitter/front-end/src/components/HomePage.js"],"names":["React","Tweets","AuthContext","initialState","tweets","isFetching","hasError","reducer","state","action","type","payload","HomePage","authState","useContext","dispatch","useReducer","useEffect","fetch","headers","Authorization","token","then","res","ok","json","resJson","console","log","catch","error","length","map","tweet","id","toString"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Tweets from './Tweets'\r\nimport { AuthContext } from '../App'\r\n\r\nconst initialState = {\r\n    tweets: [],\r\n    isFetching: false,\r\n    hasError: false\r\n}\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_TWEETS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                hasError: false\r\n            }\r\n        case \"FETCH_TWEETS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                tweets: action.payload\r\n            }\r\n        case \"FETCH_TWEETS_FAILURE\":\r\n            return {\r\n                ...state,\r\n                isFetching:false,\r\n                hasError: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const HomePage = () => {\r\n\r\n    const {state: authState} = React.useContext(AuthContext)\r\n    const [state, dispatch] = React.useReducer(reducer, initialState)\r\n\r\n    React.useEffect(() => {\r\n        dispatch({\r\n            type: \"FETCH_TWEETS_REQUEST\"\r\n        })\r\n        fetch(\"hhtp://localhost:8080/users/all\", {  //TODO!\r\n        headers: {\r\n            Authorization: `Bearer ${authState.token}`\r\n          }\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            } else {\r\n                throw res\r\n            }\r\n        })\r\n    }).then(resJson => {\r\n        console.log(resJson)\r\n        dispatch({\r\n            type: \"FETCH_TWEETS_SUCCESS\",\r\n            payload: resJson\r\n        })\r\n    }).catch(error => {\r\n        console.log(error)\r\n        dispatch({ type: \"FETCH_TWEETS_FAILURE\"})\r\n    }, [ authState.token ])\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <>\r\n            {state.isFetching ? (\r\n                <span>Loading...</span>\r\n            ) : state.hasError ? (\r\n                <span>AN ERROR HAS ACCURED</span>\r\n            ) : ( \r\n                <>\r\n                {state.tweets.length >0 && state.tweets.map(tweet => (\r\n                    <Tweets key={tweet.id.toString()} tweet={tweet}/>\r\n                ))}\r\n                </>\r\n            ) }\r\n            </>\r\n            </React.Fragment>\r\n        )\r\n    \r\n}\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}